/*
 * Created by IntelliJ IDEA.
 * Language: Groovy
 * Property of Umesh Gunasekara
 * @Author: SLMORA
 * @DateTime: 06/13/2023 09:40 PM
 *
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/8.1.1/userguide/building_java_projects.html
 *
 *
 * This build.gradle comes with basic dependency requirements and create for mora-file-organizer-005-20230613001 Project
 *
 * Version      Date            Editor              Note
 * ------------------------------------------------------
 * 1.0			06/13/2023		SLMORA              Initial Code
 * 1.1          06/13/2023		SLMORA              Get copy from mora-gradle-groovy-template-001-202305220743
 *
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    id 'application'
    id 'java'
    id 'groovy'
    id 'idea'
}

//Added
group = 'com.slmora.learn'
version = '1.0.1'
description = 'moraFileOrganizer005'
//sourceCompatibility = 17
//targetCompatibility = 17
mainClassName ='com.slmora.learn.app.App'

//Added
ext{
    createdBy = "$version (Ceylon Code)"
    builtBy = "SLMORA"
    builtJDK = 17
}

//Added
configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
//    myCompile
}

repositories {
    //Added
    mavenLocal()
    // Use Maven Central for resolving dependencies.
    mavenCentral()
//    maven {url 'http://nexus.com'}
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

//    Log4j Logging Dependencies
    implementation 'org.apache.logging.log4j:log4j-core:2.19.0'
//    implementation group:'org.apache.logging.log4j',name:'log4j-core',version:'2.19.0'
    implementation 'org.apache.logging.log4j:log4j-api:2.19.0'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'

//    MyCompile
//    myCompile 'org.apache.logging.log4j:log4j-slf4j-impl:2.19.0'

//    Apache
    implementation 'org.apache.commons:commons-lang3:3.12.0'
    implementation 'org.apache.commons:commons-collections4:4.4'
    implementation 'commons-io:commons-io:2.11.0'

//    For Hex Generation
    implementation 'commons-codec:commons-codec:1.15'
    implementation 'org.springframework.security:spring-security-crypto:5.7.3'

//    Json
    implementation 'org.json:json:20220924'
    // https://mvnrepository.com/artifact/com.googlecode.json-simple/json-simple
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

//    lombok
    compileOnly 'org.projectlombok:lombok:1.18.24'
    annotationProcessor 'org.projectlombok:lombok:1.18.24'

//    JSP Servlet
    implementation 'javax.transaction:jta:1.1'
    implementation 'org.slf4j:slf4j-api:2.0.3'
    implementation 'javax.servlet:jstl:1.2'

    compileOnly 'javax.servlet:javax.servlet-api:4.0.1'
    compileOnly 'javax.servlet.jsp:jsp-api:2.2'
    compileOnly 'javax:javaee-api:8.0.1'

    // This dependency is used by the application.
//    Elapsed Time
    implementation 'com.google.guava:guava:31.0.1-jre'

//    SQL
//    runtimeOnly 'mysql:mysql-connector-java:8.0.31'
    implementation 'mysql:mysql-connector-java:8.0.31'

//    DB
//    implementation 'org.apache.commons:commons-dbcp2:2.9.0'
    implementation 'commons-dbcp:commons-dbcp:1.4'
    implementation 'com.zaxxer:HikariCP:5.0.1'
    implementation 'com.mchange:c3p0:0.9.5.5'
    implementation 'org.apache.tomcat:tomcat-jdbc:10.1.0'
    implementation 'org.vibur:vibur-dbcp:25.0'

//    Hibernate
    implementation 'org.hibernate.orm:hibernate-core:6.1.6.Final'
//    implementation 'org.hibernate:hibernate-core:5.6.14.Final'
    implementation 'org.hibernate.orm:hibernate-hikaricp:6.1.6.Final'
//    implementation 'org.hibernate:hibernate-hikaricp:5.6.14.Final'
    implementation 'org.hibernate:hibernate-jcache:6.1.6.Final'
//    implementation 'org.hibernate:hibernate-ehcache:5.6.14.Final'
//    implementation 'org.ehcache.modules:ehcache-107:3.10.8'
    implementation 'org.ehcache.modules:ehcache-107:3.10.6'//Dont use 3.10.7/8
    implementation 'org.hibernate.validator:hibernate-validator:8.0.0.Final'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'

//    QR Generation
    implementation 'com.google.zxing:core:3.5.0'
    implementation 'com.google.zxing:javase:3.5.0'

//    Excel
    implementation 'org.apache.poi:poi:5.2.3'
    implementation 'org.apache.poi:poi-ooxml:5.2.3'

//    Media
//    implementation 'it.sauronsoftware:jave:1.0.2'

//    JUnit Jupiter for testing
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.1'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.1'

//    Mockito
    testImplementation 'org.hamcrest:hamcrest-all:1.3'

//    Mockito
    testImplementation 'org.mockito:mockito-core:4.8.0'

    // https://mvnrepository.com/artifact/org.bouncycastle/bcpkix-jdk18on
    implementation group: 'org.bouncycastle', name: 'bcpkix-jdk18on', version: '1.75'
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

application {
    // Define the main class for the application.
    mainClass = 'com.slmora.learn.app.App'
}

tasks.named('test') {
    // Use JUnit Platform for unit tests.
    useJUnitPlatform()
}

//Added
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

//Added
//sourceSets.main.java.srcDir('src/main')
sourceSets {
    main{
        java{
            srcDirs = ['src/main/java', 'src/generated/java']
//            exclude '**/com/slmora/learn/app/Main.java'
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test{
        java{
            srcDirs = ['src/test/java']
//            exclude '**/com/slmora/learn/app/Main.java'
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

//Added
//https://stackoverflow.com/questions/34855649/invalid-signature-file-digest-for-manifest-main-attributes-exception-while-tryin
//https://stackoverflow.com/questions/37848553/error-in-executing-the-generated-jar-file
jar {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    manifest{
        attributes 'Implementation-Title': 'Gradle Jar File Example',
                'Manifest-Version': "${version}",
                'Created-By': "${createdBy}",
                'Built-By': "${builtBy}",
                'Build-Jdk': "${builtJDK}",
                'Main-Class': "${mainClassName}"
    }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    archiveBaseName.set('mora-file-organizer-005-20230613001')
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
}